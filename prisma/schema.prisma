// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  ADMIN
  MEMBER
}

enum LeaveStatus {
  PENDING
  APPROVED
  REJECTED
}

model User {
  id            Int             @id @default(autoincrement())
  name          String
  email         String          @unique
  avatar        String?
  role          Role            @default(MEMBER)
  createdAt     DateTime        @default(now())
  updateAt      DateTime        @default(now())
  leaves        leaves[]
  announcements announcements[]
  articles      articles[]
}

model leaves {
  id              Int         @id @default(autoincrement())
  status          LeaveStatus @default(PENDING)
  reason          String
  leaveDate       String
  rejectionReason String?
  userId          Int
  createdAt       DateTime    @default(now())
  updateAt        DateTime    @default(now())
  user            User        @relation(fields: [userId], references: [id])

  @@unique([userId, leaveDate])
}

model announcements {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  excerpt   String
  content   String
  userId    Int
  createdAt DateTime @default(now())
  updateAt  DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model articles {
  id        Int      @id @default(autoincrement())
  title     String
  slug      String   @unique
  image     String
  excerpt   String
  content   String
  userId    Int
  createdAt DateTime @default(now())
  updateAt  DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}
